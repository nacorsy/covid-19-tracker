{"version":3,"sources":["components/Cards/ContentOfCard/ContentOfCard.module.css","redux/covid/covidReducer.js","redux/rootReducer.js","redux/store.js","components/Cards/ContentOfCard/ContentOfCard.jsx","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","redux/covid/covidActions.js","App.js","index.js","App.module.css","components/Cards/Cards.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","INITIAL_STATE","loading","data","confirmed","value","recovered","deaths","lastUpdate","country","errorMessage","covidReducer","state","action","type","payload","rootReducer","combineReducers","covid","middlewares","thunk","store","createStore","applyMiddleware","ContentOfCard","label","Grid","item","component","Card","xs","md","className","category","cx","styles","card","infected","getStyle","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","toLowerCase","Cards","useSelector","container","spacing","justify","url","fetchDailyData","a","axios","get","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","backgroundColor","options","legend","display","title","text","lineChart","borderColor","fill","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","getCases","dispatch","changeableUrl","message","App","useDispatch","image","src","alt","CountryPicker","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c1bad60.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"ContentOfCard_card__KEc2l\",\"infected\":\"ContentOfCard_infected__2vIlb\",\"recovered\":\"ContentOfCard_recovered__1mxsZ\",\"deaths\":\"ContentOfCard_deaths__2leuH\"};","const INITIAL_STATE = {\n  loading: false,\n  data: {\n    confirmed: {\n      value: null,\n    },\n    recovered: {\n      value: null,\n    },\n    deaths: {\n      value: null,\n    },\n    lastUpdate: null,\n  },\n  country: '',\n  errorMessage: '',\n};\n\nconst covidReducer = (state = INITIAL_STATE, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case 'AWAITING_COVID':\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case 'REJECTED_COVID':\n      return {\n        ...state,\n        loading: false,\n        errorMessage: payload,\n      };\n\n    case 'SUCCESS_COVID':\n      return {\n        ...state,\n        loading: false,\n        data: payload.data,\n        country: payload.country,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default covidReducer;\n","import { combineReducers } from 'redux';\n\nimport covidReducer from './covid/covidReducer';\n\nconst rootReducer = combineReducers({\n  covid: covidReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './rootReducer';\n\nconst middlewares = [thunk];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nexport default store;\n","import React from 'react';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\n\nimport styles from './ContentOfCard.module.css';\n\nconst ContentOfCard = ({ label, data: { value }, lastUpdate }) => {\n  const getStyle = (category) => {\n    switch (category) {\n      case 'Infected':\n        return cx(styles.card, styles.infected);\n      case 'Recovered':\n        return cx(styles.card, styles.recovered);\n      case 'Deaths':\n        return cx(styles.card, styles.deaths);\n      default:\n        return null;\n    }\n  };\n  return (\n    <Grid item component={Card} xs={12} md={3} className={getStyle(label)}>\n      <CardContent>\n        <Typography color='textSecondary' gutterBottom>{label}</Typography>\n        <Typography variant='h5'>\n          <CountUp\n            start={0}\n            end={value}\n            duration={2.5}\n            separator=','\n          />\n        </Typography>\n        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\n        <Typography variant='body2'>Number of {label.toLowerCase()} by COVID-19</Typography>\n      </CardContent>\n    </Grid>\n  );\n};\n\nexport default ContentOfCard;\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\n\nimport styles from './Cards.module.css';\nimport ContentOfCard from './ContentOfCard/ContentOfCard';\n\nconst Cards = () => {\n  const { confirmed, recovered, deaths, lastUpdate } = useSelector((state) => state.covid.data);\n\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify='center'>\n        <ContentOfCard label='Infected' data={confirmed} lastUpdate={lastUpdate} />\n        <ContentOfCard label='Recovered' data={recovered} lastUpdate={lastUpdate} />\n        <ContentOfCard label='Deaths' data={deaths} lastUpdate={lastUpdate} />\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { useSelector } from 'react-redux';\n\nimport { fetchDailyData } from '../../api';\n\nimport styles from './Chart.module.css';\n\nconst Chart = () => {\n  const [dailyData, setDailyData] = useState({});\n  const { confirmed, recovered, deaths } = useSelector((state) => state.covid.data);\n  const country = useSelector((state) => state.covid.country);\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n\n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n\n  const barChart = (\n    confirmed ? (\n      <Bar\n        data={{\n          labels: ['Infected', 'Recovered', 'Deaths'],\n          datasets: [\n            {\n              label: 'People',\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n              data: [confirmed.value, recovered.value, deaths.value],\n            },\n          ],\n        }}\n        options={{\n          legend: { display: false },\n          title: { display: true, text: `Current state in ${country}` },\n        }}\n      />\n    ) : null\n  );\n\n  const lineChart = (\n    dailyData[0] ? (\n      <Line\n        data={{\n          labels: dailyData.map(({ date }) => date),\n          datasets: [{\n            data: dailyData.map((data) => data.confirmed),\n            label: 'Infected',\n            borderColor: '#3333ff',\n            fill: true,\n          }, {\n            data: dailyData.map((data) => data.deaths),\n            label: 'Deaths',\n            borderColor: 'red',\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n            fill: true,\n          },\n          ],\n        }}\n      />\n    ) : null\n  );\n\n  return (\n    <div className={styles.container}>\n      {country ? barChart : lineChart}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport { fetchCountries } from '../../api';\n\nimport styles from './CountryPicker.module.css';\n\nconst Countries = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, []);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue='' onChange={(e) => handleCountryChange(e.target.value)}>\n        <option value=''>Global</option>\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default Countries;\n","import axios from 'axios';\n\nexport const getCases = (country) => async (dispatch) => {\n  let changeableUrl = 'https://covid19.mathdro.id/api/';\n  if (country) changeableUrl = `https://covid19.mathdro.id/api/countries/${country}`;\n  try {\n    dispatch({\n      type: 'AWAITING_COVID',\n    });\n\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n    dispatch({\n      type: 'SUCCESS_COVID',\n      payload: { data: { confirmed, recovered, deaths, lastUpdate }, country },\n    });\n  } catch (error) {\n    dispatch({\n      type: 'REJECTED_COVID',\n      payload: error.message,\n    });\n  }\n};\n","/* eslint-disable no-shadow */\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport styles from './App.module.css';\nimport { Cards, Chart, CountryPicker } from './components';\nimport { getCases } from './redux/covid/covidActions';\nimport image from './images/image.png';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const fetchAPI = async () => {\n      await dispatch(getCases());\n    };\n    fetchAPI();\n  });\n\n  const handleCountryChange = async (country) => {\n    dispatch(getCases(country));\n  };\n\n  return (\n    <div className={styles.container}>\n      <img className={styles.image} src={image} alt='COVID-19' />\n      <Cards />\n      <CountryPicker handleCountryChange={handleCountryChange} />\n      <Chart />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}